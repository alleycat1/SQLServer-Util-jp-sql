SELECT 
    SCHEMA_NAME(t.schema_id) AS schema_name,
    t.name,
    i.name,
    ios.partition_number,
    t.type_desc,
    i.type_desc,
    t.create_date,
    t.modify_date,
    t.is_ms_shipped,
    t.lob_data_space_id,
    t.max_column_id_used,
    t.lock_on_bulk_load,
    t.uses_ansi_nulls,
    t.is_replicated,
    t.is_tracked_by_cdc,
    t.lock_escalation_desc,
    t.is_filetable,
    t.is_memory_optimized,
    t.durability_desc,
    t.temporal_type_desc,
    i.is_unique,
    i.data_space_id,
    i.ignore_dup_key,
    i.is_primary_key,
    i.is_unique_constraint,
    i.fill_factor,
    i.is_disabled,
    i.allow_row_locks,
    i.allow_page_locks,
    i.has_filter,
    i.filter_definition,
    i.compression_delay,
    i.suppress_dup_key_messages,
    i.auto_created,
    i.optimize_for_sequential_key,
    ios.leaf_insert_count,
    ios.leaf_delete_count,
    ios.leaf_update_count,
    ios.leaf_ghost_count,
    ios.nonleaf_insert_count,
    ios.nonleaf_delete_count,
    ios.nonleaf_update_count,
    ios.leaf_allocation_count,
    ios.nonleaf_allocation_count,
    ios.leaf_page_merge_count,
    ios.nonleaf_page_merge_count,
    ios.range_scan_count,
    ios.singleton_lookup_count,
    ios.forwarded_fetch_count,
    ios.lob_fetch_in_pages,
    ios.lob_fetch_in_bytes,
    ios.lob_orphan_create_count,
    ios.lob_orphan_insert_count,
    ios.row_overflow_fetch_in_pages,
    ios.row_overflow_fetch_in_bytes,
    ios.column_value_push_off_row_count,
    ios.column_value_pull_in_row_count,
    ios.row_lock_count,
    ios.row_lock_wait_count,
    ios.row_lock_wait_in_ms,
    ios.page_lock_count,
    ios.page_lock_wait_count,
    ios.page_lock_wait_in_ms,
    ios.index_lock_promotion_attempt_count,
    ios.index_lock_promotion_count,
    ios.page_latch_wait_count,
    ios.page_latch_wait_in_ms,
    ios.page_io_latch_wait_count,
    ios.page_io_latch_wait_in_ms,
    ios.tree_page_latch_wait_count,
    ios.tree_page_latch_wait_in_ms,
    ios.tree_page_io_latch_wait_count,
    ios.tree_page_io_latch_wait_in_ms,
    ios.page_compression_attempt_count,
    ios.page_compression_success_count,
    ios.version_generated_inrow,
    ios.version_generated_offrow,
    ios.ghost_version_inrow,
    ios.ghost_version_offrow,
    ios.insert_over_ghost_version_inrow,
    ios.insert_over_ghost_version_offrow,
    ius.user_seeks,
    ius.user_scans,
    ius.user_lookups,
    ius.user_updates,
    ius.last_user_seek,
    ius.last_user_scan,
    ius.last_user_lookup,
    ius.last_user_update,
    ius.system_seeks,
    ius.system_scans,
    ius.system_lookups,
    ius.system_updates,
    ius.last_system_seek,
    ius.last_system_scan,
    ius.last_system_lookup,
    ius.last_system_update,
    ps.in_row_data_page_count,
    ps.in_row_used_page_count,
    ps.in_row_reserved_page_count,
    ps.lob_used_page_count,
    ps.lob_reserved_page_count,
    ps.row_overflow_used_page_count,
    ps.row_overflow_reserved_page_count,
    ps.used_page_count,
    ps.reserved_page_count,
    ps.row_count
FROM 
     sys.tables AS t
     INNER JOIN sys.indexes AS i
     ON i.object_id = t.object_id
     LEFT JOIN sys.dm_db_index_usage_stats AS ius
     ON ius.database_id = DB_ID()
        AND ius.object_id = t.object_id
        AND ius.index_id = i.index_id
     LEFT JOIN sys.dm_db_partition_stats AS ps
     ON ps.object_id = t.object_id
        AND ps.index_id = i.index_id
     OUTER APPLY sys.dm_db_index_operational_stats(DB_ID(),i.object_id,i.index_id,ps.partition_number) AS ios
WHERE OBJECT_NAME(i.object_id) IS NOT NULL
      AND OBJECT_SCHEMA_NAME(i.object_id) NOT IN('sys')
AND t.is_ms_shipped = 0
ORDER BY 
    t.schema_id,
    t.name ASC;